@page "/"
@using m0.maui.Entities
@using System.Text.Json
@using System.Net.Http.Json
@inject HttpClient httpClient

<p role="time" style="margin: 0px;">@time</p>
<p role="ppm" style="margin: 0px; font-size: 1.25rem">Konsentrasi: @Singleton.PPM PPM</p>

<table class="table">
    <thead>
        <tr>
            <th>Waktu</th>
            <th>PPM</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < 10; i++)
        {
            if(_gasRecords.Count > 0)
            {
                <tr>
                    <td>@_gasRecords[i].DateTime.ToString("HH:mm:ss tt")</td>
                    <td>@_gasRecords[i].Concentration</td>
                </tr>
            }
        }
    </tbody>
</table>

@code
{
    private string time = DateTime.Now.ToString("HH:mm:ss tt");
    private List<GasRecord> _gasRecords = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            var periodicTimer = new PeriodicTimer(TimeSpan.FromSeconds(1));
            while(await periodicTimer.WaitForNextTickAsync())
            {
                time = DateTime.Now.ToString("HH:mm:ss tt");
                await GetRealtimeAsync();
                await GetRecordAsync();
                this.StateHasChanged();
            }
        }
    }

    private async Task GetRealtimeAsync()
    {
        var request = new HttpRequestMessage
        {
            RequestUri = new Uri("http://mthrowaway488-001-site1.dtempurl.com/api/read/realtime"),
            Method = HttpMethod.Get
        };
        request.Headers.Add("Accept", "*/*");
        var response = await httpClient.SendAsync(request);
        if(response.IsSuccessStatusCode)
        {
            var content = response.Content.ReadAsStringAsync().Result;
            Singleton.PPM = int.Parse(content);
        }
    }

    private async Task GetRecordAsync()
    {
        var request = new HttpRequestMessage
        {
            RequestUri = new Uri("http://mthrowaway488-001-site1.dtempurl.com/api/read"),
            Method = HttpMethod.Get
        };
        request.Headers.Add("Accept", "*/*");
        var response = await httpClient.SendAsync(request);
        if(response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<List<GasRecord>>();
            _gasRecords = result;
        }
    }
}
